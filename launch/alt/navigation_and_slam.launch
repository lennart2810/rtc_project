<?xml version="1.0"?>
<launch>

  <arg name="controller_layout" default="1"/>
  <arg name="gazebo_sim" default="true"/>
  <arg name="map_path" default="/home/lennart/catkin_ws/src/rtc_project/maps/default_map"/>

  <!-- Gazeboo; wird nur gestartet, wenn gazebo_sim == true -->
  <!-- Für Praktika am realen Turtlebot auf false setzen -->
  <group if="$(arg gazebo_sim)">
    <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_house.launch" />
  </group>
  
  <!-- StatusToTurtleTwist als bash script -> eigenes Terminal -->
  <node pkg="rtc_project" 
        type="StatusToTurtleTwist.sh" 
        name="status_to_turtle_twist" 
        output="screen" 
        args="$(arg controller_layout) $(arg map_path)" >
  </node>

  <!-- Navigation als bash script -> eigenes Terminal-->
  <!-- mit rviz-->
  <node pkg="rtc_project" 
        type="turtlebot3_navigation.sh" 
        name="turtlebot3_navigation_node" 
        output="screen" 
        args="$(arg map_path)" >
  </node> 
  
  <!-- Slam Gmapping als bash script -> eigenes Terminal-->
  <!-- ohne rviz-->
  <node pkg="rtc_project" 
        type="turtlebot3_slam.sh" 
        name="turtlebot3_slam_node" 
        output="screen" >
  </node>  




  <!-- Knoten, der map_saver und map_server regelmäßig aufruft -->
  
</launch>

<!-- StatusToTurtleTwist.py als python script ausführen mit eigenem Terminal -->
<!-- launch-prefix="gnome-terminal (minusminus)geometry 20x20+75+14 -e" -->